<Activity mc:Ignorable="sap sap2010" x:Class="_02_Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:swf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upamt="clr-namespace:UiPath.Persistence.Activities.Model.Task;assembly=UiPath.Persistence.Activities" xmlns:upat="clr-namespace:UiPath.Persistence.Activities.Tasks;assembly=UiPath.Persistence.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1360,5578</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="73">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.Enums</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.ValidationStationAdapters</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>UiPath.Persistence.Activities.Tasks</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Abbyy.Activities</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Persistence.Activities.FormTask</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>UiPath.Persistence.Activities.ExternalTask</x:String>
      <x:String>UiPath.Persistence.Activities.BaseTask</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>System.Windows.Forms</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="90">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Core</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Process" sap:VirtualizedContainerService.HintSize="1370,5513" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ResultFolderWithTimePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtActions" />
      <Variable x:TypeArguments="x:String" Name="excelActionListFilePath" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;OC_FolderPath&quot;).ToString]" Name="OC_FolderPath" />
      <Variable x:TypeArguments="x:String" Name="SB_BucketName">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;SB_BucketName&quot;).ToString" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:String[]" Name="DocPathArray" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;ResultExcelFileName_Infix&quot;).ToString]" Name="ResultExcelFileName_Infix" />
      <Variable x:TypeArguments="swf:FolderBrowserDialog" Default="[new System.Windows.Forms.FolderBrowserDialog]" Name="folderSelect" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;ResultFolderPath&quot;).ToString]" Name="ResultFolderPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1328,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_32">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_132">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[folderSelect.SelectedPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.GetFullPath(ResultFolderPath)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="1328,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="ShowDialog">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="swf:FolderBrowserDialog">[folderSelect]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1328,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_30">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_126">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ResultFolderWithTimePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[folderSelect.SelectedPath]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_127">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[excelActionListFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[ResultFolderWithTimePath + "\ActionList.xlsx"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_133">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[DocPathArray]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(ResultFolderWithTimePath)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="actionListExcelFile" sap:VirtualizedContainerService.HintSize="1328,168" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_15" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[excelActionListFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <ui:ExcelReadRange AddHeaders="True" DataTable="[dtActions]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" Range="B2" SheetName="Actions" />
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtActions]" DisplayName="For Each Row (dtActions)" sap:VirtualizedContainerService.HintSize="1328,4670" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body (dtActions)" sap:VirtualizedContainerService.HintSize="1294,4550" sap2010:WorkflowViewState.IdRef="Sequence_68">
            <Sequence.Variables>
              <Variable x:TypeArguments="upamt:TaskData" Name="taskObj" />
              <Variable x:TypeArguments="x:String" Name="taskStatus" />
              <Variable x:TypeArguments="x:String" Name="ValidatedExtractionResultsPath" />
              <Variable x:TypeArguments="x:String" Name="taskId" />
              <Variable x:TypeArguments="x:String" Name="downloadZipFilePath" />
              <Variable x:TypeArguments="si:DirectoryInfo" Name="extractedZipFolderPath" />
              <Variable x:TypeArguments="x:String" Name="jsonText" />
              <Variable x:TypeArguments="p:ExtractionResult" Name="extractionResults" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtExtractedResult" />
              <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;DU_DocumentTypeId&quot;).ToString]" Name="DU_ValidationConfidenceType" />
              <Variable x:TypeArguments="x:String" Default="assets\Template\ActualValuesTemplate.xlsx" Name="actualValuesTemplatePath" />
              <Variable x:TypeArguments="x:String" Name="fileName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1252,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_33">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_134">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[row("FileName").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <If Condition="[row(&quot;Status&quot;).ToString = &quot;Completed&quot;]" sap:VirtualizedContainerService.HintSize="1252,2727" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="actionListExcelFile" sap:VirtualizedContainerService.HintSize="434,168" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_19" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[excelActionListFilePath]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dtExtractedResult]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="B2" SheetName="[fileName]" />
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="773,2569" sap2010:WorkflowViewState.IdRef="Sequence_73">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="731,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_28">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_119">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[taskId]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[row("TaskId").ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_120">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[downloadZipFilePath]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">["assets\Temp\" + taskId + ".zip"]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <upat:GetTaskData TimeoutMs="{x:Null}" DisplayName="Get Task Data" sap:VirtualizedContainerService.HintSize="731,162" sap2010:WorkflowViewState.IdRef="GetTaskData_1" TaskId="[Long.Parse(row(&quot;TaskId&quot;).ToString)]" TaskOutput="[taskObj]" />
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="731,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_26">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_117">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[taskStatus]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[taskObj.Status.Value.ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_131">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Object">[taskStatus]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="actionListExcelFile" sap:VirtualizedContainerService.HintSize="731,196" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[excelActionListFilePath]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtActions]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Actions" StartingCell="B2" />
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ExcelApplicationScope>
                  <If Condition="[taskStatus = &quot;Completed&quot;]" sap:VirtualizedContainerService.HintSize="731,1701" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="486,1543" sap2010:WorkflowViewState.IdRef="Sequence_72">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="444,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_27">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_118">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[ValidatedExtractionResultsPath]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.Linq.JObject.Parse(taskObj.Data.ToString)("ValidatedExtractionResultsPath").ToString]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[downloadZipFilePath]" DisplayName="Download Storage File" FolderPath="[OC_FolderPath]" sap:VirtualizedContainerService.HintSize="444,185" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="[ValidatedExtractionResultsPath]" StorageBucketName="[SB_BucketName]" />
                        <uascw:ExtractFiles Password="{x:Null}" CodePage="Default" DestinationFolder="assets\Temp\" DestinationFolderInfo="[extractedZipFolderPath]" DisplayName="Extract/Unzip Files" ExtractToADedicatedFolder="True" FileToExtract="[downloadZipFilePath]" sap:VirtualizedContainerService.HintSize="444,205" sap2010:WorkflowViewState.IdRef="ExtractFiles_1" SkipUnsupportedFiles="False" />
                        <ui:ReadTextFile Content="[jsonText]" DisplayName="Read Text File" FileName="[extractedZipFolderPath.ToString + &quot;\output_results.json&quot;]" sap:VirtualizedContainerService.HintSize="444,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                        <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="444,79" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[downloadZipFilePath]" />
                        <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="444,79" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[extractedZipFolderPath.ToString]" />
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="444,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_29">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_124">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="p:ExtractionResult">[extractionResults]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="p:ExtractionResult">[UiPath.DocumentProcessing.Contracts.Results.ExtractionResult.Deserialize(jsonText)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DU03_GetValidatedResultDataTable.xaml" sap:VirtualizedContainerService.HintSize="444,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="assets\InvokeWorkflows\01_DocumentUnderstanding\DU03_GetValidatedResultDataTable.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="reportTemplatePath">[actualValuesTemplatePath]</InArgument>
                            <InArgument x:TypeArguments="p:ExtractionResult" x:Key="extractionResults">[extractionResults]</InArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtExtractedResult">[dtExtractedResult]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="DU_ValidationConfidenceType">[DU_ValidationConfidenceType]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="444,196" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_16" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[excelActionListFilePath]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtExtractedResult]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[fileName]" StartingCell="B2" />
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_3" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1252,1553" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[DocPathArray]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="docPath" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1419" sap2010:WorkflowViewState.IdRef="Sequence_71">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="resultExcelName" />
                      <Variable x:TypeArguments="x:Boolean" Name="isResultExcel" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dtActualValue" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dtActualPage" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="484,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_31">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_128">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[resultExcelName]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[Path.GetFileName(docPath)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:IsMatch BuilderPattern="[\d_]+AccuracyEvaluation_.+OCR.xlsx" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[resultExcelName]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;[\\d_]+AccuracyEvaluation_.+OCR.xlsx&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[&quot;[\d_]+&quot; + ResultExcelFileName_Infix + &quot;_.+OCR.xlsx&quot;]" RegexOption="IgnoreCase" Result="[isResultExcel]" />
                    <If Condition="[isResultExcel]" sap:VirtualizedContainerService.HintSize="484,218" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Else>
                        <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                      </If.Else>
                    </If>
                    <ui:FilterDataTable DataTable="[dtExtractedResult]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="484,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtActualValue]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">["ActualValue"]</InArgument>
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="484,196" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[docPath]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtActualValue]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[fileName]" StartingCell="J2" />
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                    <ui:FilterDataTable DataTable="[dtExtractedResult]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="484,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtActualPage]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <InArgument x:TypeArguments="x:String">["ActualPage"]</InArgument>
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="484,196" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[docPath]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtActualPage]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[fileName]" StartingCell="K2" />
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
  </Sequence>
</Activity>