<Activity mc:Ignorable="sap sap2010" x:Class="EX01_InsertDocImageToExcelSheet" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="docImgInExcelHeight" Type="InArgument(x:Int32)" />
    <x:Property Name="docImgPasteCol" Type="InArgument(x:String)" />
    <x:Property Name="docPath" Type="InArgument(x:String)" />
    <x:Property Name="excelFilePath" Type="InArgument(x:String)" />
    <x:Property Name="sheetName" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>965,1967</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>UiPath.Persistence.Activities.Tasks</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.Enums</x:String>
      <x:String>UiPath.Abbyy.Core.FlexiCapture.ValidationStationAdapters</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Abbyy.Core</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InsertDocImageToExcelSheet" sap:VirtualizedContainerService.HintSize="975,1902" sap2010:WorkflowViewState.IdRef="Sequence_67">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="docPageCnt" />
      <Variable x:TypeArguments="x:String" Name="excelFileName" />
      <Variable x:TypeArguments="x:Boolean" Name="isPdf" />
      <Variable x:TypeArguments="x:Int32" Name="currentPageCnt" />
      <Variable x:TypeArguments="x:String" Name="fileName" />
      <Variable x:TypeArguments="x:String" Name="tempFolder" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="933,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_38">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_127">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[excelFileName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.GetFileName(excelFilePath)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_128">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.GetFileName(docPath)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_130">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[tempFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">["assets\Temp\" + DateTime.Now.ToString("yyyyMMdd_HHmmss")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="933,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[tempFolder]" />
    <ui:IsMatch BuilderPattern=".pdf$" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="933,59" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[fileName]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;.pdf&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;END&quot;,&quot;OperationName&quot;:&quot;Ends with&quot;,&quot;OperationValue&quot;:&quot;$&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern=".pdf$" RegexOption="IgnoreCase" Result="[isPdf]" />
    <If Condition="[isPdf]" sap:VirtualizedContainerService.HintSize="933,1069" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="454,911" sap2010:WorkflowViewState.IdRef="Sequence_69">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="412,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_35">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_119">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[currentPageCnt]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[docPath]" sap:VirtualizedContainerService.HintSize="412,59" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_7" PageCount="[docPageCnt]" />
          <ui:InterruptibleDoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="412,582" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_6">
            <ui:InterruptibleDoWhile.Body>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,417" sap2010:WorkflowViewState.IdRef="Sequence_66">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="docImgFilePath" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_36">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_129">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[docImgFilePath]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempFolder + "\" + fileName + "_" + currentPageCnt.ToString.PadLeft(3,"0"c)  + ".jpg"]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <upap:ExportPDFPageAsImage DisplayName="Export PDF Page As Image" FileName="[docPath]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExportPDFPageAsImage_3" ImageDpi="150" OutputFileName="[docImgFilePath]" PageNumber="[currentPageCnt]" />
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[currentPageCnt]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[currentPageCnt + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:InterruptibleDoWhile.Body>
            <ui:InterruptibleDoWhile.Condition>
              <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="currentPageCnt &lt;= docPageCnt" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
            </ui:InterruptibleDoWhile.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InterruptibleDoWhile>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[tempFolder + &quot;\&quot; + fileName]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[docPath]" />
      </If.Else>
    </If>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim xlApp As Microsoft.Office.Interop.Excel.Application&#xA;Dim xlWorkBook As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim xlWorkSheet As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim xlShapes As Microsoft.Office.Interop.Excel.Shapes&#xA;Dim files As New ArrayList&#xA;&#xA;Try&#xA;&#x9;xlApp = New Microsoft.Office.Interop.Excel.ApplicationClass&#xA;&#x9;xlWorkBook = xlApp.Workbooks.Open(xlPath)&#xA;&#x9;xlWorkSheet = DirectCast(xlWorkBook.Worksheets(xlSheet),Microsoft.Office.Interop.Excel.Worksheet)&#xA;&#x9;xlShapes = DirectCast(xlWorkSheet.Shapes, Microsoft.Office.Interop.Excel.Shapes)&#xA;&#x9;For Each extension As String In &quot;*.jpg;*.jpeg;*.png&quot;.Split(&quot;;&quot;c)&#xA;&#x9;&#x9;Dim fs As String() = System.IO.Directory.GetFiles(docImgFolderPath,  extension)&#xA;&#x9;&#x9;files.AddRange(fs)&#xA;&#x9;Next&#xA;&#x9;Dim i As Int32&#xA;&#x9;i = 1&#xA;&#x9;For Each imgPath As String In files&#xA;&#x9;&#x9;Dim xlShape As Microsoft.Office.Interop.Excel.Shape&#xA;&#x9;&#x9;Dim image As System.Drawing.Image&#xA;&#x9;&#x9;Dim widthOriginal As Single&#xA;&#x9;&#x9;Dim heightOriginal As Single&#xA;&#x9;&#x9;Dim row As Double&#x9;&#xA;&#x9;&#x9;Dim left As Double&#xA;&#x9;&#x9;Dim top As Double&#xA;&#x9;&#x9;Dim width As Single&#xA;&#x9;&#x9;Dim height As Single&#xA;&#x9;&#x9;Dim docImgInExcelConvertRatio As Double&#xA;&#x9;&#x9;Try&#xA;&#x9;&#x9;&#x9;image = Image.FromFile(imgPath)&#xA;&#x9;&#x9;&#x9;widthOriginal = image.Width&#xA;&#x9;&#x9;&#x9;heightOriginal = image.Height&#xA;&#x9;&#x9;&#x9;height =CType( docImgInExcelHeight*15/20, Single)&#xA;&#x9;&#x9;&#x9;docImgInExcelConvertRatio = height / heightOriginal&#xA;&#x9;&#x9;&#x9;row = (i -1) * (docImgInExcelHeight/20) + 3&#xA;&#x9;&#x9;&#x9;width = CType(Math.Round(widthOriginal * docImgInExcelConvertRatio), Integer)&#xA;&#x9;&#x9;    left = DirectCast(DirectCast(xlWorkSheet.Cells(row, col), Microsoft.Office.Interop.Excel.Range).Left,Double)&#xA;&#x9;&#x9;    top = DirectCast(DirectCast(xlWorkSheet.Cells(row, col), Microsoft.Office.Interop.Excel.Range).Top,Double)&#xA;&#x9;&#x9;    width = CType(Math.Round(widthOriginal * docImgInExcelConvertRatio), Single)&#xA;&#x9;&#x9;    xlShape = xlShapes.AddPicture(imgPath, Microsoft.Office.Core.MsoTriState.msoFalse,Microsoft.Office.Core.MsoTriState.msoTrue,CType(left,Single),CType(top,Single),width,height)&#xA;&#x9;&#x9;&#x9;i = i +1&#xA;&#x9;&#x9;Finally&#xA;&#x9;&#x9;&#x9;image.Dispose()&#xA;&#x9;&#x9;&#x9;If Not xlShape Is Nothing Then&#xA;&#x9;&#x9;&#x9;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(xlShape)&#xA;&#x9;&#x9;&#x9;End If&#xA;&#x9;&#x9;End Try&#xA;&#x9;Next&#xA;Catch UAEx As UnauthorizedAccessException&#xA;&#x9;Console.WriteLine(UAEx.Message)&#xA;&#x9;Catch PathEx As PathTooLongException&#xA;&#x9;Console.WriteLine(PathEx.Message)&#xA;Finally&#xA;&#x9;xlWorkBook.Save&#xA;&#x9;xlWorkBook.Close&#xA;&#x9;xlApp.Quit&#xA;&#x9;If Not xlShapes Is Nothing Then&#xA;&#x9;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(xlShapes)&#xA;&#x9;End If&#xA;&#x9;If Not xlWorkSheet Is Nothing Then&#xA;&#x9;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(xlWorkSheet)&#xA;&#x9;End If&#xA;&#x9;If Not xlWorkBook Is Nothing Then&#xA;&#x9;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(xlWorkBook)&#xA;&#x9;End If&#xA;&#x9;If Not xlApp Is Nothing Then&#xA;&#x9;&#x9;System.Runtime.InteropServices.Marshal.ReleaseComObject(xlApp)&#xA;&#x9;End If&#xA;End Try&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="933,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="xlPath">[Path.GetFullPath(excelFilePath)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="xlSheet">[sheetName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="col">[docImgPasteCol]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="docImgFolderPath">[Path.GetFullPath(tempFolder)]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="docImgInExcelHeight">[docImgInExcelHeight]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="933,79" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[tempFolder]" />
  </Sequence>
</Activity>